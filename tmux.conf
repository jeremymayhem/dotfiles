run-shell "tmux setenv -g TMUX_VERSION $(echo #{version} | cut -c1-3)"

#set -g @resurrect-processes 'ssh watch "sudo su" vim top htop'

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-resurrect'"
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-continuum'"
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-logging'"
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-online-status'"
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-copycat'"
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 1.9" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-yank'"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'

set -sg escape-time 0
setw -g xterm-keys on
set -g default-terminal "screen-256color"
set -sg repeat-time 600
set -g status-interval 1
set -g display-time 5000
set -g display-panes-time 1500
set -g history-limit 10000
set -g focus-events on
set -g aggressive-resize on

# Turn off auto renaming of windows and panes
set-option -g automatic-rename off
set-option -g allow-rename off
set-window-option -g monitor-activity off
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none

# Enable UTF-8 character encoding (went away in tmux 2.2)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1]' "set -q -g utf8 on"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1]' "set -q -g status-utf8 on"

# Terminal throttling to avoid performance crapulation with high activity
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1]' "set -g c0-change-trigger 10; set -g c0-change-interval 250"

### CUSTOM KEY MAPPINGS ###
bind-key [ copy-mode
bind-key ] paste-buffer
# vim style splits
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "_" split-window -v -c "#{pane_current_path}"

# Create a tunnel session to a remote machine
bind M-t command-prompt -p "Tunnel hostname?" "new-session -s %1 ssh -AY -q %1 \; set-option default-command \"ssh -AY -q %1\""

# Set secondary prefix to C-b
set -g prefix2 C-b
bind C-b send-prefix -2

# Convenience functions
bind '~' split-window -h "exec htop"
bind 'h' split-window -h "LESS= less -Cer~ ~/.tmux/cheatsheet.txt"
bind * confirm-before -p "Are you SURE you want to kill session #S? (y/n)" kill-session

# Synchronized panes in window (toggle)
bind M-s set-window-option synchronize-panes

# Trigger to reload tmux.conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# home key directional binding for resizing windows
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# vim style directional binding for resizing windows
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1

### Visual ###
set -g set-titles on
set -g set-titles-string '#h  tmux #S  #I  #W'
set -g base-index 1
set -g pane-base-index 1

# Mouse management
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1]' "setw -g mouse on"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1]' 'bind m set mouse \; display "mouse mode #{?mouse,on,off}"'
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1]' "set -g mode-mouse copy-mode \; set -g mouse-resize-pane on \; set -g mouse-select-pane on"

# Paste selection with middle click or right click
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1]' "bind-key -T root MouseDown2Pane select-pane\\\; run -b 'tmux paste-buffer'"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1]' "bind-key -T root MouseDown3Pane select-pane\\\; run -b 'tmux paste-buffer'"

# SSH Agent management
# set-option -ga update-environment ' ORIGINAL_SSH_AUTH_SOCK'
# Remove SSH_AUTH_SOCK to disable tmux automatically resetting the variable
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID \
                             SSH_CONNECTION WINDOWID XAUTHORITY"

# Use a symlink to look up SSH authentication
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

set -g status-right ' %a %h-%d %H:%M '
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1]' "set -g @plugin 'tmux-plugins/tmux-resurrect'"

# set -g status-keys vi
# set -g mode-keys vi
set -g prefix C-a
bind C-a send-prefix

################################################################################################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
################################################################################################

# Include local overrides
if-shell 'test -f "$HOME/.tmux.conf.local"' 'source ~/.tmux.conf.local'
if-shell 'test -f "$HOME/.tmux.local.conf"' 'source ~/.tmux.local.conf'
if-shell 'test -f "$HOME/.tmux.theme.conf"' 'source ~/.tmux.theme.conf'
if-shell 'test -f "$HOME/.tmux.mayhem.conf"' 'source ~/.tmux.mayhem.conf'

